/**
 * Node script that opens a file containing a JSON with a single key, "words",
 * and parse it into a new file that the game uses to generate random words for
 * puzzles. Words from the raw-words.json were generated by ChatGPT 3.5. I found
 * it unreliable to limit words to the correct amount of characters about 10% of the time.
 * However, rather than throw them out, I wanted a simple way to insert them where they should go.
 * 
 * After parsing and organizing, open the words.json file and replace the contents.
 */

import fs from "fs";

function validateAndFix() {
    const sourceFile = `..\\scriptAssets\\raw-words.json`;
    const newFile = `..\\scriptAssets\\words.json`;
    const newObject = {
        4: [],
        5: [],
        6: [],
        7: []
    };

    try {
        const fileContents = new Promise((resolve) => {
            fs.readFile(sourceFile, 'utf8', (err, data) => {
                if (data) {
                    const parsedData = JSON.parse(data);
                    const words = parsedData.words;

                    for (let i = 0; i < words.length; i++) {
                        const word = words[i];
                        const length = word.length;

                        console.log(`word = ${word}, length = ${length}`);

                        // Check for words that fall outside our params
                        // and duplicates because ChatGPT be like that sometimes
                        if ((length > 3 && length < 8) && newObject[length].indexOf(word) < 0) {
                            newObject[length].push(word);
                        }
                    }

                    console.log(`\n`);
                    // Print word stats:

                    for (const key in newObject) {
                        console.log(`Total ${key}-letter words: ${newObject[key].length}\n`);
                    }
                    resolve(newObject);
                } else if (err) {
                    console.error(`validateAndFix fs.readFile error: `, err);
                    resolve(newObject);
                    exit;
                }
            });
        });

        fileContents.then((data) => {
            fs.writeFile(newFile, JSON.stringify(data), {
                encoding: 'utf8',
                flag: 'w+',
                mode: 0o666
            }, (errW) => {
                if (errW) {
                    errorOut(errW);
                } else {
                    console.log(`The file was created and saved at ${newFile.toString()}`);
                    console.log(`validateAndFix complete.`);
                }
            });
        });
    } catch (error) {
        console.error(`Error in validateAndFix: `, error);
    }
}

validateAndFix();
